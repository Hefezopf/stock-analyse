marketstack.com:
----------------

. ~/.bash_profile


REST Api
https://marketstack.com/dashboard
info@hopf-it.de
m*2-1


https://bsym.bloomberg.com:
---------------------------------
OpenFIGI API | OpenFIGI
https://bsym.bloomberg.com/api
Hefezopf
oM*2-1!
info@hopf-it.de

https://marketstack.com/usage
https://github.com/Hefezopf/stock-analyse/actions


https://www.chartjs.org/docs/latest/charts/line.html
https://www.chartjs.org/docs/latest/

https://www.openfigi.com/api#rate-limit

export X_OPENFIGI_APIKEY="X-OPENFIGI-APIKEY: 55c6c3ff-77a0-40a2-b1c4-23c636bc7ce3-1"
echo $X_OPENFIGI_APIKEY
export TICKER=IBM
curl 'https://api.openfigi.com/v2/mapping' --request POST --header 'Content-Type: application/json' --header 'echo ${X_OPENFIGI_APIKEY}' --data '[{"idType":"TICKER", "idValue":"'${TICKER}'"}]' | jq '.[0].data[0].name'


TODO:
-----
-index vorne wegnehmen -> out/ADS-chart.html
-value vorne wegnehmen -> data/ADS-data.html
-data/_ticker

-Doppelte urls vermeiden
  perl -ne 'print unless $seen{$_}++' out/result.html > out/resultuniq.html
  br ?
  randomResult="ooooooo"
  RandomId 77; randomResult=$?
  echo ---- $randomResult  
(-Anker in Result)
(-.XETRA über weg nehmen)
-Link zu comdirect in Result
https://nutzer.comdirect.de/inf/aktien/detail/chart_big.html?ID_NOTATION=65165716&NAME_PORTFOLIO=Watch&POSITION=234%2C%2C24125490&timeSpan=1Y&chartType=MOUNTAIN&interactivequotes=true&disbursement_split=false&news=false&rel=false&log=false&useFixAverage=false&freeAverage0=100&freeAverage1=38&freeAverage2=18&expo=false&fundWithEarnings=true&indicatorsBelowChart=RSI&indicatorsBelowChart=MACD&indicatorsBelowChart=SST&PRESET=1
https://nutzer.comdirect.de/inf/aktien/detail/chart.html?fixAverage1=0&fixAverage0=0&interactivequotes=true&freeAverage0=100&togglepanel-averages-indicators=&POSITION=272%2C%2C65165716&NAME_PORTFOLIO=Watch&INDEX_FILTER=false&timeSpan=1Y&useFixAverage=false&date-fromDate=on&date-toDate=on&togglepanel-types=&ID_NOTATION_INDEX=&toDate=08.12.2020&BRANCHEN_FILTER=false&fromDate=09.12.2019&freeAverage1=38&freeAverage2=18&indicatorsBelowChart=RSI&indicatorsBelowChart=MACD&indicatorsBelowChart=SST&indicatorsBelowChart=&chartType=MOUNTAIN&togglepanel-2=&togglepanel-1=&ID_NOTATION=65165716&chartIndicator=&openerPageId=lsg.stock.detail.chart
-Nur die zippen die Altert haben?

-Strategien auslagen
-Mehrere Strategien über Schalter anwenden
-Performance, wenn dann bei stochastik; in streams?
-RSI - Relative Stärke (14)
  https://www.charttec.de/html/indikator_rsi_relative_strength_index.php
  https://de.wikipedia.org/wiki/Relative_Strength_Index
-MACD - Moving average convergence divergance (12,26,9)
-openfigi
  https://www.openfigi.com/api
-Werte werden reverted/gedreht, daher erstmal nur bis stochastik 9 auswerten
-#!/bin/sh
-(Runden auf euro)
-Auflösung: Ticker zu WKN und Name
-Besseres EMail Template
-unittest functions  
-???muss !! exchCode": "GR",. Aktien Name in Output schreiben mit FIGI, denn ADS ist nicht Adidas!
symbolRaw MSF exchCode
symbolRaw ABEC exchCode "US"
symbolRaw BRYN exchCode "US"
symbolRaw CMC exchCode "SM"
symbolRaw JNJ exchCode "US"
symbolRaw WMT exchCode "US"
symbolRaw PRG exchCode "TB"
symbolRaw UNH exchCode "US"
symbolRaw HDI exchCode "AR"
symbolRaw INL exchCode "SJ"
symbolRaw BAC exchCode "US"
symbolRaw WDP exchCode "BB"
symbolRaw PFE exchCode "US"
symbolRaw PEP exchCode "MK"
symbolRaw NWT exchCode "SP"
symbolRaw NFC exchCode "LN"
symbolRaw BCO exchCode "BA"
symbolRaw MDO exchCode "LN"
symbolRaw SAP exchCode "US"
symbolRaw NOVC exchCode "US"
symbolRaw NKE exchCode "US"
symbolRaw ABL exchCode "AU"
symbolRaw UNI2 exchCode "EO"
symbolRaw CTO exchCode "LN"
symbolRaw BRM exchCode "RO"
symbolRaw LLY exchCode "US"
symbolRaw AMG exchCode "US"
symbolRaw ALD exchCode "AU"



!!
Github Token for cURL:
cURL works only from unrestricted devices!

GITHUB_TOKEN=cbf8fa08a037b3d1e14c78fc5e991204861a2704-1
curl -H "Authorization: token $GITHUB_TOKEN" -H 'Accept: application/vnd.github.everest-preview+json' "https://api.github.com/repos/Hefezopf/stock-analyse/dispatches" -d '{"event_type": "curl", "client_payload": {"symbols": "MSF.XETRA", "percentage": "1", "query": "offline", "rated": "underrated", "stochastic": "40"}'
!!


einpacken:
tar -zcvf out.tar.gz out
auspacken:
tar -xvf out.tar.gz
list:
tar -tvf out/out.tar.gz


#stochasticQuoteList=", , , , , , , , , , 82, 55, 28, 62, 18, 29, 10, 61, 100, 100, 100, 100,"


start chrome "http://www.google.com/search?tbm=fin&q=ADS.XETRA" "http://www.google.com/search?tbm=fin&q=ALV.XETRA" 

BAYN
curl --location --request GET "http://api.marketstack.com/v1/eod?access_key=${MARKET_STACK_ACCESS_KEY}&exchange=XETRA&symbols=BAYN.XETRA" | jq '.data[0].volume'

DRW8
curl --location --request GET "http://api.marketstack.com/v1/eod?access_key=${MARKET_STACK_ACCESS_KEY}&exchange=XETRA&symbols=DRW8.XETRA" | jq '.data[].close'

AI3A.XETRA
curl --location --request GET "http://api.marketstack.com/v1/eod?access_key=${MARKET_STACK_ACCESS_KEY}&exchange=XETRA&symbols=AI3A.XETRA" | jq '.data[].close'

https://www.google.com/search?q=MSF.XETRA


https://github.com/Hefezopf/stock-analyse/actions

https://github.com/Hefezopf/stock-analyse

https://github.com/Hefezopf/stock-analyse.git


curl --location --request GET "http://api.marketstack.com/v1/eod?access_key=${MARKET_STACK_ACCESS_KEY}&exchange=XETRA&symbols=VOW.XETRA" |  jq '.'

http://api.marketstack.com/v1/eod?access_key=${MARKET_STACK_ACCESS_KEY}&symbols=AAPL

curl --location --request GET 'http://api.marketstack.com/v1/eod?access_key=${MARKET_STACK_ACCESS_KEY}&symbols=AAPL'
	
curl GET 'http://api.marketstack.com/v1/eod?access_key=${MARKET_STACK_ACCESS_KEY}&symbols=AAPL'

curl --location --request GET 'http://api.marketstack.com/v1/eod?access_key=${MARKET_STACK_ACCESS_KEY}&symbols=AAPL' | jq '.'

jq:
---
https://stedolan.github.io/jq/
cat Xetra.json | jq '.data[].symbol'


MSF.XETRA AMZ.XETRA ABEC.XETRA ABEA.XETRA AHLA.XETRA FB2A.XETRA BRYN.XETRA BRH.XETRA VODJ.XETRA 3V64.XETRA CMC.XETRA JNJ.XETRA WMT.XETRA M4I.XETRA NESM.XETRA PRG.XETRA SOBA.XETRA UNH.XETRA NCB.XETRA HDI.XETRA INL.XETRA CCC3.XETRA BAC.XETRA XONA.XETRA WDP.XETRA MOH.XETRA 6MK.XETRA CTP2.XETRA PFE.XETRA PEP.XETRA CHV.XETRA ADB.XETRA CIS.XETRA NWT.XETRA R6C.XETRA R6C3.XETRA NVD.XETRA NFC.XETRA ORC.XETRA BCO.XETRA FOO.XETRA LOR.XETRA MDO.XETRA SAP.XETRA NOVC.XETRA NKE.XETRA ABL.XETRA UNVB.XETRA UNI2.XETRA TRVC.XETRA CTO.XETRA 2M6.XETRA BRM.XETRA TL0.XETRA 4I1.XETRA 4AB.XETRA 2PP.XETRA LLY.XETRA HBC1.XETRA AMG.XETRA ASMF.XETRA ZEG.XETRA SNW.XETRA ASME.XETRA ALD.XETRA 1TY.XETRA IBM.XETRA NOVA.XETRA TOTB.XETRA 1YD.XETRA LOM.XETRA UNP.XETRA 1NBA.XETRA TII.XETRA BPE.XETRA CQD.XETRA LIN.XETRA BPE5.XETRA DAP.XETRA GS7.XETRA IXD1.XETRA BIL.XETRA AIR.XETRA GIS.XETRA GEC.XETRA BMT.XETRA SRB.XETRA QCI.XETRA AEC1.XETRA ENL.XETRA ALV.XETRA MMM.XETRA VOW.XETRA CVS.XETRA GUI.XETRA SIE.XETRA KTF.XETRA UPAB.XETRA

https://github.com/dawidd6/action-send-mail

https://jqplay.org/jq?q=.%5B0%5D&j=%5B%7B%22name%22%3A%22JSON%22%2C%20%22good%22%3Atrue%7D%2C%20%7B%22name%22%3A%22XML%22%2C%20%22good%22%3Afalse%7D%5D

	
curl --location --request GET 'https://marketstack.com/stock_api.php?offset=0&exchange=XETRA'
curl --location --request GET 'http://api.marketstack.com/v1/eod?access_key=${MARKET_STACK_ACCESS_KEY}&exchange=XETRA&symbols=ALV.XETRA' | jq '.'
curl --location --request GET 'http://api.marketstack.com/v1/eod?access_key=${MARKET_STACK_ACCESS_KEY}&exchange=XETRA&symbols=VOW.XETRA' |  jq '.data[].name'
curl --location --request GET 'http://api.marketstack.com/v1/eod?access_key=${MARKET_STACK_ACCESS_KEY}&exchange=XETRA&symbols=VOW.XETRA' |  jq '.data[].close'
curl --location --request GET 'https://marketstack.com/stock_api.php?offset=0&exchange=XETRA&search=' |  jq '.data[].close'

