name: Simulate

on:
  #schedule:
  # At 05:00 on Mon, Tue, Wed, Thr, Fri (MEST: run is 2 hour delayed: --> 7:00)
  #- cron: "0 5 * * 1,2,3,4,5"

  # Can be triggered with cURL
  #repository_dispatch:
    #types: [simulate] 

  # Can be triggered manually
  workflow_dispatch:
    inputs:
      symbolsParam:
        description: 'SYMBOLS - List of stock symbols like: "DBK BEI".'
        required: false
        default: ''
      amountPerTradeParam:
        description: 'AMOUNT_PER_TRADE - "2500" means inititial Buy with 2500€'
        required: true
        default: '2500'
      RSIBuyLevelParam:
        description: 'RSI_BUY_LEVEL - "24" means Buy at 24'
        required: true
        default: '24'
      StockSellLevelParam:
        description: 'STOCH_SELL_LEVEL - "65" means sell over 65'
        required: true
        default: '65'
      incrementPerTradeParam:
        description: 'INCREMENT_PER_TRADE - "1.01" means 1% more per trade'
        required: true
        default: '1.01'
      # sellIfOverPercentageParam NOT USED!!!        
      sellIfOverPercentageParam:
        description: 'SELL_IF_OVER_PERCENTAGE - "5" means sell all, if gain is 5% or more'
        required: true
        default: '99'
      keepIfUnderPercentageParam:
        description: 'KEEP_IF_UNDER_PERCENTAGE - "2" means do NOT sell, if only 2% gain'
        required: true
        default: '2'
      alarmCountForStockParam:
        description: 'ALARM_COUNT_FOR_STOCK - "7" means buy, if count is true for alarm. Like: C+4R+7S+P+D+N+M+ = 7 times +'
        required: true
        default: '7'
      alarmCountForIndexParam:
        description: 'ALARM_COUNT_FOR_INDEX - "5" means buy, if count is true for alarm. Like: 7S+P+D+N+M+ = 5 times +'
        required: true
        default: '5'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
            
      # Runs a set of commands using the runners shell
      - name: Run Simulate
        run: |
          echo "Start Simulate ..."

          export GPG_PASSPHRASE=${{secrets.GPG_PASSPHRASE}}

          #Depot+DAX+MDAX+SDAX+Eurostoxx+DOW (432).
          gpg --batch --yes --passphrase "$GPG_PASSPHRASE" config/own_symbols.txt.gpg 2>/dev/null
          ownSymbolsVar=$(sed 's/^/*/' config/own_symbols.txt | cut -f1 -d ' ' | tr '\n' ' ')
          ownSymbolsVar=$(echo "$ownSymbolsVar" | sed 's/*//g')
          rm -rf config/own_symbols.txt
          stockSymbolsVar=$(cat config/stock_symbols.txt)
          symbolsVar=$(echo $ownSymbolsVar $stockSymbolsVar)

          amountPerTradeVar=2500
          RSIBuyLevelVar=24
          StockSellLevelVar=65
          incrementPerTradeVar=1.01
          sellIfOverPercentageVar=5
          keepIfUnderPercentageVar=2
          alarmCountForStockVar=7
          alarmCountForIndexVar=5

          symbolsInput="${{github.event.inputs.symbolsParam}}"
          amountPerTradeInput="${{github.event.inputs.amountPerTradeParam}}"
          RSIBuyLevelInput="${{github.event.inputs.RSIBuyLevelParam}}"
          StockSellLevelInput="${{github.event.inputs.StockSellLevelParam}}"
          incrementPerTradeInput="${{github.event.inputs.incrementPerTradeParam}}"
          sellIfOverPercentageInput="${{github.event.inputs.sellIfOverPercentageParam}}"
          keepIfUnderPercentageInput="${{github.event.inputs.keepIfUnderPercentageParam}}"
          alarmCountForStockInput="${{github.event.inputs.alarmCountForStockParam}}"
          alarmCountForIndexInput="${{github.event.inputs.alarmCountForIndexParam}}"
          
          symbolsVar=${symbolsInput:-$symbolsVar}
          amountPerTradeVar=${amountPerTradeInput:-$amountPerTradeVar}
          RSIBuyLevelVar=${RSIBuyLevelInput:-$RSIBuyLevelVar}
          StockSellLevelVar=${StockSellLevelInput:-$StockSellLevelVar}
          incrementPerTradeVar=${incrementPerTradeInput:-$incrementPerTradeVar}
          sellIfOverPercentageVar=${sellIfOverPercentageInput:-$sellIfOverPercentageVar}
          keepIfUnderPercentageVar=${keepIfUnderPercentageInput:-$keepIfUnderPercentageVar}
          alarmCountForStockVar=${alarmCountForStockInput:-$alarmCountForStockVar}
          alarmCountForIndexVar=${alarmCountForIndexInput:-$alarmCountForIndexVar}

          chmod +x ./simulate.sh
          chmod +x ./simulate/*.sh
          # In case of shell errors with end of line: end of file unexpected (expecting "then")
          sed -i 's/\r$//' ./simulate/*.sh
          ./simulate.sh "$symbolsVar" "$amountPerTradeVar" "$RSIBuyLevelVar" "$StockSellLevelVar" "$incrementPerTradeVar" "$sellIfOverPercentageVar" "$keepIfUnderPercentageVar" "$alarmCountForStockVar" "$alarmCountForIndexVar"

          ./simulate/simulate-buy-candidates.sh "$symbolsVar" 3 35

          #git fetch --unshallow origin
          git config user.email ${{secrets.MAIL_ADRESS}}
          git config user.name "Markus Hopf"
          git add simulate/out/*.html
          git add simulate/out/*.js
          git commit -am "Github ${{github.event_name}} ${{github.event.action}}" --allow-empty 
          git push 

      - name: Send result via email
        uses: dawidd6/action-send-mail@v3.11.0
        with:
          server_address: smtp.ionos.de
          server_port: 465
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}          
          subject: SA Simulate Result
          #subject: Simulate Result ${{github.event_name}} ${{github.event.action}}
          # Read file contents as body:
          html_body: file://simulate/out/_simulate.html
          to: ${{secrets.MAIL_ADRESS}}
          from: Github stock-analyse # <githubÄhopf-...de>
          # Optional content type (defaults to text/plain):
          #content_type: text/html          
          # Optional attachments:
          #attachments: out/_out.tar.gz
