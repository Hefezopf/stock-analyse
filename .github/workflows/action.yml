name: StockAnalyse

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      symbolsParam:
        description: 'List of stock symbols like: "ADS.XETRA ALV.XETRA BAS.XETRA ..."'     
        required: true
        default: 'ADS.XETRA'
      percentageParam:
        description: 'Percentage difference; "3" means 3 percent; 1 if not specified.'     
        required: true
        default: '3'
      queryParam:
        description: '[online|offline] "offline" do not query over REST API. Instead read local files.'     
        required: true
        default: 'offline'
      ratedParam:
        description: 'Looking for what rating? [overrated|underrated]. If "underrated", only list low/underrated stocks.'     
        required: true
        default: 'underrated'

  schedule:
  # Every 10 minutes
  # */10 * * * *  
  # Every Monday at 13:00
  # 0 13 * * 1
  # At 00:00 on Saturday
  # 0 0 * * 6
  # Every 2rd day of the month
  # 0 0 */2 * *
  - cron: "0 0 */2 * *"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run analyse.sh ${{github.event.inputs.symbolsParam}} ${{github.event.inputs.percentageParam}} ${{github.event.inputs.queryParam}} ${{github.event.inputs.ratedParam}}
        run: |
          echo Start analyse...
          export MARKET_STACK_ACCESS_KEY=${{secrets.MARKET_STACK_ACCESS_KEY}}
          export symbolsEnv=${{github.event.inputs.symbolsParam}}
          export percentageEnv=${{github.event.inputs.percentageParam}}
          export queryEnv=${{github.event.inputs.queryParam}}
          export ratedEnv=${{github.event.inputs.ratedParam}}
          echo with parameter: ${{github.event.inputs.symbolsParam}} ${{github.event.inputs.percentageParam}} ${{github.event.inputs.queryParam}} ${{github.event.inputs.ratedParam}}
          export symbolsVar="${symbolsEnv-BMW.XETRA}"
          export percentageVar="${percentageEnv-5"
          export queryVar="${queryEnv-offline}"
          export ratedVar="${ratedEnv-underrated}"
          echo with Manuel parameter: $symbolsEnv $percentageEnv $queryEnv $ratedEnv
          echo with CI parameter: $symbolsVar $percentageVar $queryVar $ratedVar		  
          chmod +x ./analyse.sh
          chmod +x ./analyse-dax2.sh
          chmod +x ./analyse-dax30.sh
          chmod +x ./analyse-eurostoxx50.sh
          chmod +x ./analyse-xetra100.sh
          chmod +x ./analyse-xetra1000.sh
          echo XXXXX
          sh ./analyse-dax2.sh ${{github.event.inputs.percentageParam}} ${{github.event.inputs.queryParam}} ${{github.event.inputs.ratedParam}}
      - name: Send result.txt via email
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: smtp.ionos.de
          server_port: 465
          #username: github(Ã¤)h...-it.de
          #password: g*1!
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}          
          subject: Github Actions job result for stock-analyse analyse.sh ${{github.event.inputs.symbolsParam}} ${{github.event.inputs.percentageParam}} ${{github.event.inputs.queryParam}} ${{github.event.inputs.ratedParam}}
          # Literal body:
          #body: Build job of ${{github.repository}} completed successfully!
          # Read file contents as body:
          body: file://./data/result.txt
          to: info@hopf-it.de
          from: Github stock-analyse # <github@hopf-it.de>
          # Optional content type (defaults to text/plain):
          content_type: text/html
          # Optional attachments:
          attachments: ./data/result.txt        
