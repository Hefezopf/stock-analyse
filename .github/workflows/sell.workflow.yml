# Is triggered:
#   1. curl 
#   2. manuell 
name: Sell

# Controls when the action will run. 
on:
  # Can be triggered with cURL
  repository_dispatch:
    types: [sell]

  # Can be triggered manually
  workflow_dispatch:
    inputs:
      symbolParam:
        description: 'SYMBOL - stock symbol to sell from own stocks list: "BEI"'
        required: true
        default: 'BEI'
      sellPiecesParam:
        description: 'SELL_PIECES - Number of pieces to sell: "100"'
        required: true
        default: '100'
      sellPriceParam:
        description: 'SELL_PRICE - Selling Price: "9.99"'
        required: true
        default: '9.99'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v5

      # Runs a set of commands using the runners shell
      - name: Run curl sell
        run: |
          echo "Start sell ..."

          export GPG_PASSPHRASE=${{secrets.GPG_PASSPHRASE}}
          
          symbolDefault='${{github.event.client_payload.symbol}}'
          symbolInput="${{github.event.inputs.symbolParam}}"
          symbolVar=${symbolInput:-$symbolDefault}  

          sellPiecesDefault='${{github.event.client_payload.sellPieces}}'
          sellPiecesInput="${{github.event.inputs.sellPiecesParam}}"
          sellPiecesVar=${sellPiecesInput:-$sellPiecesDefault}  

          sellPriceDefault='${{github.event.client_payload.sellPrice}}'
          sellPriceInput="${{github.event.inputs.sellPriceParam}}"
          sellPriceVar=${sellPriceInput:-$sellPriceDefault}  

          chmod +x ./script/sell.sh
          ./script/sell.sh "$symbolVar" "$sellPiecesVar" "$sellPriceVar"

          gpg --batch --yes --passphrase "$GPG_PASSPHRASE" config/own_symbols.txt.gpg
          symbolsVar=$(sed 's/^/*/' config/own_symbols.txt | cut -f1 -d ' ' | tr '\n' ' ')
          rm -rf config/own_symbols.txt

          chmod +x ./analyse.sh
          ./analyse.sh "$symbolsVar $symbolVar" 1 9 25

          #git fetch --unshallow origin
          git config user.email ${{secrets.MAIL_ADRESS}}
          git config user.name "Markus Hopf"
          git add config/own_symbols.txt.gpg config/stock_symbols.txt
          git add data/*.txt
          git add history/*.txt
          git add alarm/*.txt
          git add buy/*.txt
          git add sell/*.txt
          git add status        
          git add out/*.html
          git add out/*.js
          git add out/*.css
          git commit -am "Github ${{github.event_name}} ${{github.event.action}}" --allow-empty 
          git push

      - name: Send result via email
        uses: dawidd6/action-send-mail@v6
        with:
          server_address: smtp.ionos.de
          server_port: 465
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: SA Sell ${{github.event.client_payload.symbol}} Result
          # Read file contents as body:
          html_body: file://template/email.html
          #body: file://out/_result.html
          to: ${{secrets.MAIL_ADRESS}}
          from: Github stock-analyse # <githubÃ„hopf-...de>
          # Optional content type (defaults to text/plain):
          #content_type: text/html
          # Optional attachments:
          #attachments: out/_out.tar.gz
