name: Manual

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
    #branches: [ main ]
  #pull_request:
    #branches: [ main ]

  # Can be triggered with cURL
  repository_dispatch:
    types: [curl] 
       
  # Can be triggered manually
  workflow_dispatch:
    inputs:
      symbolsParam:
        description: 'SYMBOLS - List of stock symbols like: "ADS ALV"'     
        required: true
        default: 'PSM CEC XONA GEC GIS B4B FTE TNE5 CRIN CCAP BEI CBK 1COV DBK LHA EOAN FME FRE HEI HEN IFX SDF MRK RWE TKA VOW MTX DWNI DHER ADS 1N8 AIL AIR ALV 1NBA ASME AXA BSD2 BAS BAYN BMW BNP DAI BSN DPW DTE ENL GZF ENI IBE1 IXD1 INN1 IES PPX AHOG PHI1 LOR LIN MOH MUV2 NOA3 1TY SNW SAP SND SIE TOTB SQU VVU VOW3 VNA'
      percentageParam:
        description: 'PERCENTAGE - "1" means 1 percent'     
        required: true
        default: '1'
      queryParam:
        description: 'QUERY - [online|offline]'     
        required: true
        default: 'offline'
      ratedParam:
        description: 'RATED - [overrated|underrated]. List low/underrated stocks'     
        required: true
        default: 'underrated'
      stochasticParam:
        description: 'STOCHASTIC14 - "9" means 9/91 percent'     
        required: true
        default: '9'
      RSIParam:
        description: 'RSI14 - "30" means 30/70 Quote'     
        required: true
        default: '30'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run stock analyse
        run: |
          echo Start analyse...
          export MARKET_STACK_ACCESS_KEY=${{secrets.MARKET_STACK_ACCESS_KEY}}
          export MARKET_STACK_ACCESS_KEY2=${{secrets.MARKET_STACK_ACCESS_KEY2}}

          symbolsDefault='${{ github.event.client_payload.symbols }}'          
          percentageDefault='${{ github.event.client_payload.percentage }}'
          queryDefault='${{ github.event.client_payload.query }}'
          ratedDefault='${{ github.event.client_payload.rated }}'
          stochasticDefault='${{ github.event.client_payload.stochastic }}'
          RSIDefault='${{ github.event.client_payload.RSI }}'  

          symbolsInput="${{github.event.inputs.symbolsParam}}"
          percentageInput=${{github.event.inputs.percentageParam}}
          queryInput=${{github.event.inputs.queryParam}}
          ratedInput=${{github.event.inputs.ratedParam}}
          stochasticInput=${{github.event.inputs.stochasticParam}}
          RSIInput=${{github.event.inputs.RSIParam}}
          
          symbolsVar=${symbolsInput:-$symbolsDefault}
          percentageVar=${percentageInput:-$percentageDefault}
          queryVar=${queryInput:-$queryDefault}
          ratedVar=${ratedInput:-$ratedDefault}          
          stochasticVar=${stochasticInput:-$stochasticDefault}          
          RSIVar=${RSIInput:-$RSIDefault}          
          
          chmod +x ./analyse.sh

          #git reset --hard origin/main
          #git config pull.rebase false
          #git pull

          sh ./analyse.sh "$symbolsVar" $percentageVar $queryVar $ratedVar $stochasticVar $RSIVar

          git config user.email "markus@hopf-it.de"
          git config user.name "Markus Hopf"
          git add data/*
          #git add out/*.html
          git commit -am "Github stock-analyse result ${{github.event_name}} ${{github.event.action}}" --allow-empty 
          git push 

      - name: Define variables
        run: |
          echo Define variables...
          export RESULT_FILES=$(ls out/*.html)
        env:
          RESULT_FILES: $(ls out/*.html)
                    
      - name: Send result via email
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: smtp.ionos.de
          server_port: 465
          #username: github(Ã¤)h...-it.de
          #password: g*1!
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}          
          subject: Github stock-analyse result ${{github.event_name}} ${{github.event.action}}
          # Literal body:
          #body: Build job of ${{github.repository}} completed successfully!
          # Read file contents as body:
          body: file://out/_result.html
          to: info@hopf-it.de
          from: Github stock-analyse # <github@hopf-it.de>
          # Optional content type (defaults to text/plain):
          content_type: text/html          
          # Optional attachments:
          attachments: out/_out.tar.gz ${{RESULT_FILES}}
